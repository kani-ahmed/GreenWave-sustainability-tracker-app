name: Python application with Slack notifications

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Get installed dependencies count
        id: installed-dependencies
        run: |
          count=$(pip list --format=freeze | wc -l)
          echo "count=$count" >> $GITHUB_OUTPUT

      - name: Lint with flake8
        id: linting
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8_output=$(flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics)
          flake8_exit_code=$?
          echo "flake8_output<<EOF" >> $GITHUB_OUTPUT
          echo "$flake8_output" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "flake8_exit_code=$flake8_exit_code" >> $GITHUB_OUTPUT
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check for test files and run pytest if found
        id: testing
        run: |
          if compgen -G "tests/test_*.py" > /dev/null; then
            pytest_output=$(pytest)
            pytest_exit_code=$?
            echo "pytest_output<<EOF" >> $GITHUB_OUTPUT
            echo "$pytest_output" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            echo "pytest_exit_code=$pytest_exit_code" >> $GITHUB_OUTPUT
          else
            echo "No tests found. Skipping pytest."
            echo "pytest_output=No tests found." >> $GITHUB_OUTPUT
            echo "pytest_exit_code=0" >> $GITHUB_OUTPUT
          fi

      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: workflow,job,commit,ref,author,took
          custom_payload: |
            {
              "text": "*${{ github.event_name == 'pull_request' && 'Pull Request' || 'Push' }} Event*\n\n*Action Performer:* ${{ github.actor }}\n*Repository:* ${{ github.repository }}\n*Branch:* ${{ github.ref }}\n\n*Python Setup:*\n:python: Python 3.12 has been set up for the workflow.\n\n*Dependencies:*\nInstalled ${{ steps.installed-dependencies.outputs.count }} dependencies\n${{ job.status == 'success' && ':white_check_mark: All dependencies have been successfully installed.' || ':x: Failed to install dependencies.' }}\n\n*Linting:*\n```\n${{ steps.linting.outputs.flake8_output }}\n```\n${{ steps.linting.outputs.flake8_exit_code == 0 && ':white_check_mark: Linting passed successfully.' || ':x: Linting failed with errors.' }}\n\n*Testing:*\n```\n${{ steps.testing.outputs.pytest_output }}\n```\n${{ steps.testing.outputs.pytest_exit_code == 0 && ':white_check_mark: All tests passed successfully.' || ':x: Tests failed.' }}\n\n*Workflow Status:*\n${{ job.status == 'success' && ':tada: The workflow completed successfully.' || ':x: The workflow failed.' }}"
            }