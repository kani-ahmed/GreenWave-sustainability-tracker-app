name: Pull Request Approval Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  notify_slack:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      SLACK_CHANNEL_ID: "C06R1GVVDPF"
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

    steps:
      - name: Get current time
        id: current-time
        run: echo "::set-output name=time::$(date +%s)"

      - name: Notify Slack - Pull Request Opened
        id: slack_notify
        run: |
          message_ts=$(curl -s -X POST -H 'Content-type: application/json' -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
            --data '{"channel":"'"$SLACK_CHANNEL_ID"'","attachments":[{"color":"#36a64f","pretext":":eyes: Pull Request Opened","title":"Pull Request #${{ github.event.pull_request.number }}","title_link":"${{ github.event.pull_request.html_url }}","text":"${{ github.event.pull_request.title }}","fields":[{"title":"Opened by","value":"${{ github.event.pull_request.user.login }}","short":true},{"title":"Repository","value":"${{ github.repository }}","short":true},{"title":"Target Branch","value":"${{ github.event.pull_request.base.ref }}","short":true}],"footer":"GitHub Actions","footer_icon":"https://github.githubassets.com/favicon.ico","ts":${{ steps.current-time.outputs.time }}}]}' \
            https://slack.com/api/chat.postMessage | jq -r '.ts')
          echo "::set-output name=message_ts::$message_ts"

      - name: Wait for Required Approvals
        id: wait_for_approvals
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        run: |
          approvals=0
          message_ts=${{ steps.slack_notify.outputs.message_ts }}
          while [ $approvals -lt 1 ]; do
            sleep 60
            reaction_count=$(curl -s -H "Authorization: Bearer $SLACK_BOT_TOKEN" "https://slack.com/api/reactions.get?channel=$SLACK_CHANNEL_ID&timestamp=$message_ts" | jq '.message.reactions[] | select(.name=="thumbsup") | .count')
            approvals=$((reaction_count))
            echo "Current approvals: $approvals"
          done
          echo "Pull Request #${{ github.event.pull_request.number }} has been approved by all required reviewers"
          echo "::set-output name=approved::true"

      - name: Notify Slack - Pull Request Approved
        if: steps.wait_for_approvals.outputs.approved == 'true'
        run: |
          curl -s -X POST -H 'Content-type: application/json' -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
            --data '{"channel":"'"$SLACK_CHANNEL_ID"'","attachments":[{"color":"#36a64f","pretext":":white_check_mark: Pull Request Approved","title":"Pull Request #${{ github.event.pull_request.number }}","title_link":"${{ github.event.pull_request.html_url }}","text":"${{ github.event.pull_request.title }}","fields":[{"title":"Approved by","value":"All required reviewers","short":true},{"title":"Repository","value":"${{ github.repository }}","short":true}],"footer":"GitHub Actions","footer_icon":"https://github.githubassets.com/favicon.ico","ts":${{ steps.current-time.outputs.time }}}]}' \
            https://slack.com/api/chat.postMessage

      - name: Merge Pull Request
        if: steps.wait_for_approvals.outputs.approved == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh auth setup-git
          gh pr merge ${{ github.event.pull_request.number }} --auto --merge
          echo "Pull Request #${{ github.event.pull_request.number }} has been merged to the main branch"